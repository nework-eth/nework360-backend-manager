<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pmcaff.nework.manager.mapper.SysRoleMapper" >
  <resultMap id="BaseResultMap" type="com.pmcaff.nework.manager.domain.SysRole" >
    <id column="role_id" property="roleId" jdbcType="BIGINT" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="available" property="available" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>

  <select id="listRoleByParam" parameterType="map"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from ne_sys_role
    WHERE
    1=1
    <if test="role_name != null">
      AND role_name LIKE CONCAT(#{role_name},'%' )
    </if>
    <if test="available != null">
      AND available = #{available}
    </if>
    <if test="start != null  and limit != null ">
      LIMIT #{start}, #{limit}
    </if>
  </select>

  <select id="listAllUsedRoleNames" resultType="java.lang.String">
    SELECT
      role_name
    FROM
      ne_sys_role
    WHERE
      available = 1
  </select>

  <select id="findByRoleName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from ne_sys_role
    where role_name = #{permName,jdbcType=VARCHAR}
  </select>


  <sql id="Base_Column_List" >
    role_id, role_name, available, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from ne_sys_role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from ne_sys_role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.pmcaff.nework.manager.domain.SysRole" keyProperty="roleId" useGeneratedKeys="true">
    insert into ne_sys_role (role_id, role_name, available, 
      create_time, update_time)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{available,jdbcType=CHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.pmcaff.nework.manager.domain.SysRole" keyProperty="roleId" useGeneratedKeys="true">
    insert into ne_sys_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="available != null" >
        available,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="available != null" >
        #{available,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pmcaff.nework.manager.domain.SysRole" >
    update ne_sys_role
    <set >
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="available != null" >
        available = #{available,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pmcaff.nework.manager.domain.SysRole" >
    update ne_sys_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      available = #{available,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
</mapper>